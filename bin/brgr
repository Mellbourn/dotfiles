#!/usr/bin/env bash

# This script finds/greps strings introduced in the current branch relative to the main branch, e.g. current PR.

# Check if the regex parameter is provided
if [ -z "$1" ]; then
  echo "Usage: prfd <regex>"
  exit 1
fi

regex="$1"
BASE_BRANCH=$(git rev-parse --verify --quiet main || git rev-parse --verify --quiet master)

git diff -U0 "$(git merge-base "$BASE_BRANCH" HEAD)"..HEAD --name-only | while read -r file; do
  git diff -U0 "$(git merge-base "$BASE_BRANCH" HEAD)"..HEAD -- "$file" |
    # this has to be a modern version of awk, e.g. gnu awk:
    gawk -v file=" $file" -v regex="$regex" '
    BEGIN {
      # ANSI color codes
      color_reset = "\033[0m";
      color_file = "\033[1;34m";     # Bold Blue for file name
      color_position = "\033[0;32m"; # Subdued Green for line and column (not bold)
      color_match = "\033[1;31m";    # Bold Red for the matched text
    }
    /^@@/ {
      # Extract the starting line number from the diff header using a regex
      match($0, /\+([0-9]+)/, arr);
      diff_start_line = arr[1];
      next;
    }
    $0 ~ regex {
      # Find the start position of the regex match within the original line
      match($0, regex);
      column_number = RSTART - 1; # Adjust RSTART by subtracting 1 to get the correct column

      # Store original line and trim leading plus and spaces
      original_line = $0;
      trimmed_line = $0;
      sub(/^\+\s*/, "", trimmed_line);

      # Calculate the adjusted RSTART based on the trimmed line
      adjusted_rstart = RSTART - (length(original_line) - length(trimmed_line));

      # Calculate the adjusted line number and subtract 6 to correct it
      line_number = diff_start_line + FNR - 1 - 6;

      # Highlight the matched part in the output line
      highlighted_line = substr(trimmed_line, 1, adjusted_rstart - 1) color_match substr(trimmed_line, adjusted_rstart, RLENGTH) color_reset substr(trimmed_line, adjusted_rstart + RLENGTH);

      # Print the file name, line number, column number, and highlighted output
      print color_file file color_reset "(" color_position line_number "," column_number color_reset "): " highlighted_line;
    }
  '
done | ${PAGER:-less -R}
