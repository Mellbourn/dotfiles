#!/bin/bash
###############################################################################
# Klas Mellbourn's dotfile
#
# https://github.com/Mellbourn/dotfiles
# https://dotfiles.github.io/
#
# Many settings inspired by
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#
# Nice links here
# https://medium.com/@webprolific/getting-started-with-dotfiles-43c3602fd789#.2d3cfjv7d
###############################################################################
set -e

if grep -q Raspbian /etc/os-release 2>/dev/null; then
  DOTFILES_LITE=1
fi
export PROCESSOR_ARCHITECTURE=${PROCESSOR_ARCHITECTURE:-$(uname -p)}
if [[ $(hostname) == *"Klarna"* ]] || [[ $(hostname) == "C0"* ]] || [[ $(hostname) == "FV"* ]] || [[ $(hostname) == "HKG"* ]]; then
  export KLARNA=1
fi
if [ -f "/Library/Apple/System/Library/Receipts/com.apple.pkg.RosettaUpdateAuto.bom" ]; then
  export ROSETTA_INSTALLED=1
fi
if [[ $PROCESSOR_ARCHITECTURE != 'arm' || -n "$ROSETTA_INSTALLED" ]]; then
  export X86_OR_ROSETTA=1
fi

if [ -x "$(command -v lsb_release)" ] && [[ $(lsb_release -si) == 'Ubuntu' ]]; then
  #OS_UBUNTU=1
  if dpkg -l ubuntu-desktop >/dev/null; then
    UBUNTU_DESKTOP=1
  fi
fi

pushd ~
yadm submodule update --init --recursive --remote
popd

# TODO: eventually delete clean up of old version handlers
if [ -d ~/.nodebrew ]; then
  trash ~/.nodebrew
fi
if [ -d ~/.rbenv ]; then
  trash ~/.rbenv
fi

# Install `zinit` if not installed
if [ ! -d ~/.zinit ]; then
  mkdir ~/.zinit
  chmod go-w ~/.zinit # to avoid insecure directories complaint
  git clone https://github.com/zdharma-continuum/zinit.git ~/.zinit/bin
else
  # when all computers have switchted to zdharma-continuum, this can be removed
  pushd ~/.zinit/bin
  git remote set-url origin https://github.com/zdharma-continuum/zinit.git
  popd
fi

# install asdf version manager https://asdf-vm.com/
if [ ! -d ~/.asdf ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf
fi
asdf update
asdf plugin update --all

set +e
# remove these removals eventually
asdf uninstall java zulu-8.58.0.13
asdf plugin remove java
asdf plugin remove nodejs

asdf plugin add ruby
asdf plugin add python
asdf plugin add bundler
# asdf direnv doesn't seem absolutely necessary, but could improve performance. 2.30.2 works
asdf plugin add direnv
set -e
asdf install direnv latest
asdf global direnv latest
# if no versions are installed, the asdf plugin will fall back to "system"

if [[ $(uname) == 'Darwin' ]]; then
  ###############################################################################
  # macOS specific installations
  ###############################################################################
  OS_MAJOR_VERSION=$(sw_vers -productVersion | cut -d. -f1)
  BIG_SUR_MAJOR_VERSION=11
  MONTEREY_MAJOR_VERSION=12

  # activate cleanup jobs, doesn't actually update?
  launchctl unload ~/Library/LaunchAgents/local.cleanup.downloads.plist
  launchctl load -w ~/Library/LaunchAgents/local.cleanup.downloads.plist
  launchctl unload ~/Library/LaunchAgents/local.cleanup.pictures.plist
  launchctl load -w ~/Library/LaunchAgents/local.cleanup.pictures.plist
  launchctl unload ~/Library/LaunchAgents/local.cleanup.resurrect.plist
  launchctl load -w ~/Library/LaunchAgents/local.cleanup.resurrect.plist
  launchctl unload ~/Library/LaunchAgents/local.cleanup.trash.plist
  launchctl load -w ~/Library/LaunchAgents/local.cleanup.trash.plist
  # they don't work, so run them anyway
  "$HOME"/bin/cleanup-directory -d "$HOME"/Downloads -l 10 -v
  "$HOME"/bin/cleanup-directory -d "$HOME"/Pictures -l 10 -v
  # not needed: tmux-resurrect deletes files older than 30 days by default
  #$HOME/bin/cleanup-directory -d $HOME/.tmux/resurrect -f \*/tmux_resurrect_\*.txt -l 5 -v
  "$HOMEBREW_PREFIX"/sbin/tmpreaper -vv 2d -T 180 "$HOME"/.Trash &

  ###############################################################################
  # App store                                                                   #
  ###############################################################################
  brew install mas || true

  # Xcode
  mas install 497799835
  mas lucky "Copy 'Em (Clipboard Manager)" # (2.11) 876540291
  mas lucky "John's Background Switcher"   # 907640277
  # Safari extensions
  mas lucky "Adblock Plus for Safari ABP" # (2.1.10) 1432731683
  mas lucky "CloseTabs Extension"         # (2.0) 1508584686
  mas lucky "Dark Reader for Safari"      # (1.4.3) 1438243180
  mas lucky "Grammarly for Safari"        # (9.33) 1462114288
  mas lucky "Popcorn for Safari"          # (2.0) 1535719670

  if [[ -n $X86_OR_ROSETTA ]]; then
    # these still require rosetta afaik
    mas lucky Bredbandskollen # 1147976909
    # Microsoft Remote Desktop 10 1295203466
    mas lucky "Microsoft Remote Desktop"
  fi

  # upgrade all
  if [ "$OS_MAJOR_VERSION" -ge "$BIG_SUR_MAJOR_VERSION" ]; then
    mas upgrade
  fi

  xcode-select --install || true

  ###############################################################################
  # Homebrew                                                                    #
  ###############################################################################

  if ! hash brew 2>/dev/null; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  brewSafeUninstall() {
    if brew list "$@" 2>/dev/null; then
      brew uninstall "$@"
    fi
  }

  brewSafeUninstallCask() {
    if brew list --cask "$@" 2>/dev/null; then
      brew uninstall --cask "$@"
    fi
  }

  brewSafeUntap() {
    if brew tap "$@" 2>/dev/null; then
      brew untap "$@"
    fi
  }

  # some uninstalls must be made before update
  brewSafeUninstallCask virtualbox

  brew cleanup
  brew update
  brew upgrade
  brew upgrade --cask
  brew tap aws/tap                # for aws-sam-cli
  brew tap git-time-metric/gtm    # for gtm
  brew tap homebrew/cask-fonts    # for font-fira-code
  brew tap homebrew/cask-drivers  # for philips-hue-sync and luna-display
  brew tap homebrew/cask-versions # for google-chrome-beta
  # enables searching brew for commands not found, e.g. when. https://github.com/Homebrew/homebrew-command-not-found
  brew tap homebrew/command-not-found

  # not all computers need logitech drivers, also, these need sudo
  # brew install --cask homebrew/cask-drivers/logitech-gaming-software
  # brew install --cask homebrew/cask-drivers/logitech-options

  # remove brews here that were previously installed, to sync between machines
  brewSafeUntap wix/brew # for AppleSimulatorUtils
  for formula in zsh-autosuggestions ilmbase asciinema cheat fortune git-number z.lua weechat broot deno htop rbenv applesimutils node@14 nodebrew asdf pipenv pyenv-virtualenvwrapper pyenv-virtualenv pyenv openjdk@11 transcrypt nginx; do
    brewSafeUninstall $formula
  done

  for cask in luna-display zeplin zenmap pokerth dash controlplane fork keycastr postman shortcat tor-browser tripmode stunnel java8 p4v authy; do
    brewSafeUninstallCask $cask
  done

  # this must be in alphabetical order!
  # maybe add these eventually:
  # haskell-stack
  # and then: cargo install viu https://github.com/atanunq/viu
  apps="
aws-sam-cli
awscli@1
bash
bash-completion
bat
choose-rust
cloc
coreutils
croc
diff-so-fancy
direnv
dockutil
duf
duti
eth-p/software/bat-extras-batgrep
exa
fd
findutils
fpp
fx
fzf
gawk
gcal
gh
git
git-crypt
git-delta
git-extras
git-lfs
git-recent
glances
gnu-sed
gnupg
gradle
graphicsmagick
grc
grep
gron
gtm
highlight
htmlq
httpie
hyperfine
imagemagick
jq
kpcli
lastpass-cli
less
librsvg
lnav
lsd
ncdu
noti
parallel
pinentry-mac
pkg-config
prettyping
pv
react-native-cli
reattach-to-user-namespace
redis
ripgrep
rust
sd
shellcheck
shfmt
speedtest-cli
terminal-notifier
thefuck
tig
tiv
tldr
tmpreaper
tmux
tokei
tree
vim
volta
wakeonlan
watch
watchman
wemux
wget
yadm
yarn
zoxide
zsh
"
  # note: yarn will install node, which you might want to remove, since it is handled by nvm
  alreadyInstalled=$(brew list --formula)
  installTheseLines=$(comm -23 <(echo "$apps") <(echo "$alreadyInstalled"))
  installThese=${installTheseLines//$'\n'/ }
  echo "$installThese" | xargs brew install

  # TODO: add more when better arm support: philips-hue-sync plex imageoptim private-internet-access mockoon
  casks="
bartender
chromium
docker
flipper
font-cascadia-code-pl
font-caskaydia-cove-nerd-font
font-fira-code
font-jetbrains-mono
font-jetbrains-mono-nerd-font
google-chrome-beta
grandperspective
insomnia
istat-menus
iterm2
keeweb
keka
keycue
launchcontrol
moom
p4v
paletro
react-native-debugger
ui-browser
visual-studio-code
vlc
witch
"

  alreadyInstalled=$(brew list --cask)
  installTheseLines=$(comm -23 <(echo "$casks") <(echo "$alreadyInstalled"))
  installThese=${installTheseLines//$'\n'/ }
  echo "$installThese" | xargs brew install --cask

  if gdu --version | head -1 | grep -q "coreutils"; then
    brew install --force gdu || true
    brew link --overwrite gdu
  fi

  if [[ $PROCESSOR_ARCHITECTURE == 'arm' ]]; then

    if [[ -n "$KLARNA" ]]; then
      brew install readline libffi

      set +e
      pushd /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/include/ruby-2.6.0/
      set -e
      if [ ! -e universal-darwin20 ]; then
        sudo ln -s universal-darwin21 universal-darwin20
      fi
      set +e
      popd
      set -e

      # ruby (works: 2.6.8, 2.7.5, 3.1.0)
      # shellcheck disable=SC2015
      set +e
      # default gems in .default-gems
      pushd "$CODE_DIR"/klarna/klarna-app/master
      set -e
      asdf install
      if [ ! -d "$HOME/.volta" ]; then
        # not sure this actually works from the script
        ./bin/install-node-version-manager.sh
      fi
      set +e
      popd
      set -e
      if [ -d "$HOME/.volta" ]; then
        # no point in using a global "install", that would be overridden anyway by git hooks
        #volta install node@latest
        trash "$HOME/.volta/tools/image/node/17.7.1" || true
        trash "$HOME"/.volta/tools/inventory/node/node-v17.7.1* || true
        # do not install yarn latest, it will override the scripted yarn wrapper
        # volta install yarn@latest

        # installing npm tools using volta
        volta install git-branch-delete
      fi
      asdf global python 3.9.10

      asdf install bundler 2.3.3 && asdf global bundler 2.3.3

      # Android Studio homebrew installation no longer supported, install it manually
      brewSafeUninstallCask android-studio
      brewSafeUninstall temurin8

      # running yarn android:setup makes these unnecessary
      asdf plugin remove cmake || true
    fi

  fi
  # arm part ends

  echo will cite | parallel --citation >/dev/null 2>&1

  # set up wemux user name
  if [ -f "$HOMEBREW_PREFIX"/etc/wemux.conf ]; then
    sed -i -- "s/host_list=(brew)/host_list=($USER)/" "$HOMEBREW_PREFIX"/etc/wemux.conf
    sed -i -- 's/# allow_server_change="true"/allow_server_change="true"/' "$HOMEBREW_PREFIX"/etc/wemux.conf
  fi

  if [ -d ~/.tmux/plugins ]; then
    for plugin in ~/.tmux/plugins/*; do
      set +e
      pushd "$plugin"
      git pull
      git submodule update --init --recursive
      popd
      set -e
    done
  fi

  # finish PIA installation
  # if you already have a manual installation, you will have to remove it with
  # rm -rf /Applications/Private\ Internet\ Access.app
  if [ ! -d /Applications/Private\ Internet\ Access.app ]; then
    RUNNER="$HOMEBREW_PREFIX/Caskroom/private-internet-access/v70/Private\ Internet\ Access\ Installer.app/Contents/MacOS/runner.sh"
    if [ -f "$RUNNER" ]; then
      "$RUNNER"
    fi
  fi

  # this is needed to suppress zsh message "compinit: insecure directories""
  chmod g-w "$HOMEBREW_PREFIX"/share ~/.zsh-personal-completions

fi ############################################################################
# configuration for both Mac and Linux
###############################################################################

version_gte() {
  printf '%s\n%s' "$1" "$2" | sort -C -V -r
}
if [ -x "$(command -v cargo)" ] && version_gte "$(cargo --version | cut -d " " -f2)" 1.0.0; then
  cargo install --verbose cargo-update || true
  cargo install --verbose termimage || true
  # not working anymore?
  if [ -f ~/.cargo/bin/cargo-install-update ]; then
    set +e
    cargo install-update -a
    set -e
  fi
  if [ -f ~/.cargo/bin/cargo-install-update-config ]; then
    mv ~/.cargo/bin/cargo-install-update-config ~/.cargo/bin/cargo-install-update-configure
  fi
fi

# this seems healthy to do every now and then to make sure zsh completion works
trash ~/.zcompdump* ~/.zcompcache 2>/tmp/zcomp_delete_error.txt || true

# if, after yadm 3.0 migration, the old .yadm folder is empty, remove it
if [ -n "$(find "$HOME/.yadm" -maxdepth 0 -type d -empty 2>/dev/null)" ]; then
  trash "$HOME"/.yadm
fi

# TODO: eventually remove this removal
# remove obsolete folder for .zplugin, since it has been renamed to zinit
trash ~/.zplugin || true

# vim
mkdir -p ~/.vim/autoload
wget --show-progress -qNP ~/.vim/autoload https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

if ! [ -f ~/.ssh/id_rsa ]; then
  ssh-keygen -t rsa -b 4096 -C "${USER}@$(hostname)" -f ~/.ssh/id_rsa -N ""
  eval "$(ssh-agent -s)"
  if [[ $(uname) == 'Darwin' ]]; then
    ssh-add -K ~/.ssh/id_rsa
  else
    ssh-add
  fi
  echo "Remember to add the new public key in ~/.ssh/id_rsa.pub to github and appropriate authorized_hosts."
fi

# add tmux-256color terminfo to ~/.terminfo
curl -L https://invisible-island.net/datafiles/current/terminfo.src.gz >/tmp/terminfo.src.gz
gunzip -f /tmp/terminfo.src.gz
/usr/bin/tic -xe tmux-256color /tmp/terminfo.src

# fonts
if [[ $(uname) == 'Darwin' || -n $UBUNTU_DESKTOP ]]; then
  if [[ $(uname) == 'Darwin' ]]; then
    FONT_DIRECTORY=~/Library/Fonts
  else
    mkdir -p ~/.local/share/fonts
    FONT_DIRECTORY=~/.local/share/fonts
  fi

  # Delugia Nerd Font is Cascadia with Nerd and frequently updated, unfortunately it is buggy (too small or high icons)
  trash $FONT_DIRECTORY/Delugia.Nerd.Font.Complete.ttf || true
  trash $FONT_DIRECTORY/Delugia.Nerd.Font.Book.ttf || true
  curl -sL github.com/adam7/delugia-code/releases/latest |
    grep "delugia-book.zip\"" |
    head -1 |
    awk -F "\"" '{print "https://github.com" $2}' |
    wget --show-progress -qNi - -O "${XDG_CACHE_HOME:-$HOME/.cache}"/delugia-book.zip
  yes | unzip -u "${XDG_CACHE_HOME:-$HOME/.cache}"/delugia-book.zip -d $FONT_DIRECTORY
fi

if [ -x "$(command -v zsh)" ]; then
  zsh -ic "zinit self-update; zinit update --all; zinit cclear"
  zsh -ic "zinit delete -y zdharma/fast-syntax-highlighting | true"
  zsh -ic "zinit delete -y zdharma/history-search-multi-word | true"
  zsh -ic "zinit delete -y zdharma/null | true"
  zsh -ic "zinit delete -y zdharma/zsh-diff-so-fancy | true"
fi

# TODO: eventually remove this removal
trash ~/.gitconfig.local || true

# set up alternate gitconfig file used to determine local settings
yadm alt

# supress Spotlight indexing of code folder
if [ "$CODE_DIR" ]; then
  mkdir -p "$CODE_DIR"
  touch "$CODE_DIR"/.metadata_never_index
  mkdir -p "$CODE_DIR"/private
  mkdir -p "$CODE_DIR"/experiments
fi

if [ -z "$DOTFILES_LITE" ]; then
  if [ -x "$(command -v tldr)" ]; then
    # this has stopped working? "Could Not Rename"
    set +e
    tldr --update
    set -e
  fi
fi

###############################################################################
# development
###############################################################################

docker system prune -f 2>>/tmp/docker_system_prune.err.txt || true

function zsh_performance_measurements() {
  ~/bin/mezsh -m 5
}

############################################################################
# configuration for just Linux
###############################################################################
if [[ $(uname) == 'Linux' ]]; then

  # do some cleanup
  if [ -x "$(command -v trash-empty)" ]; then
    trash-empty 30
  fi
  # unfortunately trash-empty 0.12 does not clean NTFS mounted file systems
  ~/bin/trash-empty-wsl +30

  zsh_performance_measurements
  exit 0
fi ############################################################################
# mac specific configurations
###############################################################################

if ! [ -f ~/.fzf."$SHELLNAME" ]; then
  "$HOMEBREW_PREFIX"/opt/fzf/install --key-bindings --completion --no-update-rc
fi

###############################################################################
# development
###############################################################################
# Is node-gyp really necessary?
#npm i -g npm node-gyp
# stopped working with volta
if [ ! -d $HOME/.volta ]; then
  if [[ -n "$KLARNA" ]]; then
    if \ping -c1 -W1 jira.int.klarna.net; then
      npm update -g --registry=https://artifactory.klarna.net/artifactory/api/npm/v-npm-production/
    fi
  else
    npm update -g
  fi
fi
# save some disk
xcrun simctl delete unavailable || true

# remove itunes from login items. This way it does not open when you plug in an iPhone
osascript -e 'tell application "System Events" to delete login item "iTunesHelper"' 2>/tmp/delete_itunes_helper_error.txt || true

###############################################################################
# Associate filetypes to apps that should open them                           #
###############################################################################
# open in Visual Studio Code
duti -s com.microsoft.VSCode .js all           # javascript - extensions work too
duti -s com.microsoft.VSCode .ts all           # typescript
duti -s com.microsoft.VSCode com.apple.log all # .log
duti -s com.microsoft.VSCode public.json all
duti -s com.microsoft.VSCode public.plain-text all # text files
duti -s com.microsoft.VSCode public.text all       # does this have a real effect?
duti -s com.microsoft.VSCode public.xml all
duti -s com.microsoft.VSCode public.yaml all
# seems to have no effecxt: public.data, .lock
# open in chrome
#duti -s com.google.chrome public.svg-image all # .svg
# prefer vlc over quicktime
duti -s org.videolan.vlc .avi Viewer

###############################################################################
# Finder                                                                      #
###############################################################################
# show hidden files
defaults write com.apple.finder AppleShowAllFiles -bool true
# Show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true
# Show Path bar in Finder
defaults write com.apple.finder ShowPathbar -bool true
# Use list view in all Finder windows by default (won't affect folders where there is already a DS_Store)
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
# hide all icons on from desktop
defaults write com.apple.finder CreateDesktop -bool false
# Remove items from the Trash after 30 days
defaults write com.apple.finder FXRemoveOldTrashItems -bool true
# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
# show "Quit" menu item for finder
defaults write com.apple.finder QuitMenuItem -bool true

###############################################################################
# Sound                                                                       #
###############################################################################
# Play feedback when volume is changed
defaults write -g com.apple.sound.beep.feedback -int 1
# Change the alert beep sound
if [ -f /System/Library/Sounds/Pop.aiff ]; then
  defaults write .GlobalPreferences com.apple.sound.beep.sound /System/Library/Sounds/Pop.aiff
fi

###############################################################################
# Performance                                                                 #
###############################################################################
# reduce transparency to make WindowServer take less CPU, but looks like shit
#defaults write com.apple.universalaccess reduceTransparency 1

###############################################################################
# Miscellaneous                                                               #
###############################################################################
# Save screenshots to Pictures
defaults write com.apple.screencapture location "${HOME}/Pictures"

# reopen previous windows when starting an app
defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool true

# don't restore images in preview
defaults write com.apple.Preview NSQuitAlwaysKeepsWindows -bool false

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Make animated dialog boxes, like the save, appear faster (0.2 is default)
# did this make dialogs appear slower?
#defaults write NSGlobalDomain NSWindowResizeTime .05

# Expand print panel by default - these don't work anymore? (but expanded state is preserved between restarts)
#defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
#defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# show battery percent
defaults write com.apple.menuextra.battery ShowPercent YES

# make clock show only time, so it can be clickable in Big Sur (to show notification center)
defaults write com.apple.menuextra.clock DateFormat -string "HH:mm"

# set TextEdit default format to plain text
defaults write com.apple.TextEdit RichText -int 0

# smoother font on low DPI https://code.visualstudio.com/updates/v1_28#_blurriness-on-macos-mojave
# Apple doesn't intend to support this option https://intellij-support.jetbrains.com/hc/en-us/articles/360016827360-Reporting-font-rendering-problems
#defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO
defaults delete CGFontRenderingFontSmoothingDisabled || true

# set screen saver to activate after 20min instead of 5min
defaults -currentHost write com.apple.screensaver idleTime 1200

###############################################################################
# Mouse & Trackpad                                                            #
###############################################################################
# show in menu bar - these files no longer present in Big Sur
#defaults write com.apple.systemuiserver menuExtras -array "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" "/System/Library/CoreServices/Menu Extras/Volume.menu"
# increase trackpad tracking speed - works!
defaults write -g com.apple.trackpad.scaling -float 3.0
# increase mouse tracking speed, 3.0 normal max but magic mouse is slow
defaults write -g com.apple.mouse.scaling -float 5.0
# Trackpad: enable tap to click for this user and for the login screen - don't work!
#defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
#defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
#defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseButtonMode TwoButton
# Smart zoom enabled, double-tap with one finger
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseOneFingerDoubleTapGesture -int 1
# Double-tap with two fingers to Mission Control (set to 0 to disable) (already default?)
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerDoubleTapGesture -int 3
# Two finger horizontal swipe
# 0 = Swipe between pages with one finger
# 1 = Swipe between pages
# 2 = Swipe between full screen apps with two fingers, swipe between pages with one finger (already default?)
defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseTwoFingerHorizSwipeGesture -int 2

###############################################################################
# Calendar                                                                    #
###############################################################################
# Show week numbers (10.8 only)
defaults write com.apple.iCal "Show Week Numbers" -bool true
# disable Show invitation messages in Notification Center
defaults write com.apple.iCal InvitationNotificationsDisabled -int 1
# disable Time to Leave alert - this seems unnecessary to disable
#defaults write com.apple.iCal TimeToLeaveEnabled  -int 0

###############################################################################
# Keyboard                                                                    #
###############################################################################
# THESE SEEM DANGEROUS, NOT CONSISTENT, destroys key repeat in Chrome?
# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 25

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Use all F1, F2, etc keys as standard function keys
defaults write -g com.apple.keyboard.fnState -bool true

###############################################################################
# Keyboard shortcuts                                                          #
###############################################################################
# local keyboard shortucts

# repair full screen for chrome beta
#defaults write com.google.Chrome.beta NSUserKeyEquivalents -dict-add "Enter Full Screen" "@^f"
# undo the setting, do
# defaults delete com.google.Chrome.beta NSUserKeyEquivalents

# this didn't work anyway
#defaults write com.electron.react-native-debugger NSUserKeyEquivalents -dict-add "Enter Full Screen" "@^f"

# global keyboard shortcuts fixed

#defaults write -globalDomain NSUserKeyEquivalents -dict-add "Enter Full Screen" "@^f"
#defaults write -globalDomain NSUserKeyEquivalents -dict-add "Zoom In" "@+"
# couldn't get @< to parse
#defaults write -globalDomain NSUserKeyEquivalents -dict-add "Move focus to next window" '@\\<'

# to undo the setting
#defaults delete -globalDomain NSUserKeyEquivalents

###############################################################################
# Dock                                                                        #
###############################################################################
# show more recent apps than three
defaults write com.apple.dock show-recents -bool true
defaults write com.apple.dock show-recent-count -int 8
# arrange the icons
set +e
declare -a apps_to_remove=("Mail" "Safari" "Maps" "Photos" "FaceTime" "Calendar" "Contacts" "Reminders" "Notes" "TV" "Music" "Podcasts" "Keynote" "Numbers" "Pages" "App Store" "Messages" "Epson Photo+" "Epson Photo+ Tool" "Feedback Assistant")
for app_to_remove in "${apps_to_remove[@]}"; do
  dockutil --remove "$app_to_remove" --no-restart
done
dockutil --add "/Applications/Google Chrome Beta.app" --after "Launchpad" --no-restart
dockutil --add "/Applications/iTerm.app" --after "Google Chrome Beta" --no-restart
dockutil --add "/Applications/Visual Studio Code.app" --after "iTerm"
set -e

# autohide dock - my screen realestate is valuable!
defaults write com.apple.dock autohide -bool true
# Set the icon size of Dock items to 24 pixels
defaults write com.apple.dock tilesize -int 24
# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

###############################################################################
# Safari & WebKit                                                             #
###############################################################################
# Show status bar
defaults write com.apple.Safari ShowStatusBar -bool true
defaults write com.apple.Safari ShowOverlayStatusBar -bool true
# Show the full URL in the address bar (note: this still hides the scheme)
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
# Safari opens with: last session
defaults write com.apple.Safari AlwaysRestoreSessionAtLaunch -bool true
# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
# Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# Update extensions automatically, does this still do anything?
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
# Make Safari’s search banners default to Contains instead of Starts With
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
# Allow website tracking by disabling prevent cross-site tracking
defaults write com.apple.Safari BlockStoragePolicy -int 1
# Website use of location services, does this still do anything?
# 0 = Deny without prompting
# 1 = Prompt for each website once each day
# 2 = Prompt for each website one time only
defaults write com.apple.Safari SafariGeolocationPermissionPolicy -int 2

# run customer specific bootstrap
"${XDG_CONFIG_HOME:-$HOME/.config}"/yadm/bootstrap-customer

# this script makes brew doctor fail
trash "$HOMEBREW_PREFIX"/Library/Taps/wix/homebrew-brew/applesimutils.rb
if [ "$OS_MAJOR_VERSION" -ge "$MONTEREY_MAJOR_VERSION" ]; then
  # brew doctor will always fail on Monterey while it is in beta
  set +e
fi
brew doctor
set -e
zsh_performance_measurements
